# Contient l'ensemble des requêtes SQL effectuées par le driver en prepared statement sur la base de données MySQL
# Chaque ligne doit contenir une requète. Une requète doit être écrite sur une seule ligne ou
# répartie sur plusieurs lignes à  l'aide du caractère "\".
# Toute modification des requêtes doit conserver l'ordre des paramètres !!
# Pour plus d'information sur le format des fichiers properties, consulter :
# https://docs.oracle.com/cd/E23095_01/Platform.93/ATGProgGuide/html/s0204propertiesfileformat01.html
# Codé par Dorian Lecomte

#Room
createRoom = INSERT INTO laboIAM.room (`name`,`description`) VALUES (?, ?);
readRoomByName = SELECT roomId, name, description FROM laboIAM.room WHERE name like ?;
readRoomById = SELECT roomId, name, description FROM laboIAM.room WHERE roomId = ?;
readRoomList = SELECT roomId, name, description FROM laboIAM.room;
updateRoom = UPDATE laboIAM.room Set name = ?, description = ? WHERE roomId = ? ;
deleteRoom = DELETE FROM laboIAM.room WHERE roomId = ?;

#Action
createAction = INSERT INTO laboIAM.action (`name`, `description`) VALUES (?, ?);
readActionById = SELECT action, name, description FROM laboIAM.action WHERE action = ?;
readActionByName = SELECT action, name, description FROM laboIAM.action WHERE name like ?;
readActionList = SELECT action, name, description FROM laboIAM.action;
updateAction = UPDATE laboIAM.action SET name = ?, description = ? WHERE action = ?;
deleteAction = DELETE FROM laboIAM.action WHERE action = ?;

# Agenda
createAgenda = INSERT INTO laboIAM.agenda (dayId, roomId, action, hours) VALUES (?, ?, ?, ?, ?);
readAgendaByDayNumber = SELECT dayId, roomId, action, hours FROM laboIAM.agenda WHERE dayId = ? ORDER BY hours ASC;
readAgendaByRoomId = SELECT dayId, roomId, action, hours FROM laboIAM.agenda WHERE roomId = ? ORDER BY dayId, hours;
readWeekAgenda = SELECT ag.dayId, ag.hours, ag.roomId, ag.action  FROM laboIAM.agenda as ag, laboIAM.room as ro WHERE ag.roomId = ro.roomId ORDER BY dayId, hours, ro.name ASC;
deleteAgenda = DELETE FROM laboIAM.agenda WHERE dayId = ? AND roomId = ? AND action = ? AND hours = ?;

#Spice
createSpice = INSERT INTO laboIAM.spice (name, description, barCode) VALUES (?, ?, ?);
readSpiceById = SELECT spiceId, name, description, barCode FROM laboIAM.spice WHERE spiceId = ?;
readSpiceByName = SELECT spiceId, name, description, barCode FROM laboIAM.spice WHERE name like ?;
readSpiceList = SELECT spiceId, name, description, barCode From laboIAM.spice;
updateSpice = UPDATE laboIAM.spice SET name = ?, description = ?, barCode = ? WHERE spiceId = ?;
deleteSpice = DELETE FROM laboIAM.spice WHERE spiceId = ?;

#Parameter
createParameter = INSERT INTO laboIAM.parameter (key, param) VALUES (?, ?);
readParameterByKey = SELECT param FROM laboIAM.parameter WHERE key like ?;
updateParameter = UPDATE laboIAM.parameter SET param = ? WHERE key like ?;
deleteParameterByKey = DELETE FROM laboIAM.parameter WHERE key like ?;

#SpiceBox
readSpiceBoxContent = SELECT spiceId, name, description, barCode FROM laboIAM.spice WHERE spiceId in (SELECT spiceId FROM laboIAM.spiceBox WHERE location = ?);
updateSpiceBoxContent = UPDATE laboIAM.spiceBox SET spiceId = ? WHERE location = ?
deleteSpiceBoxContent = UPDATE laboIAM.spiceBox SET spiceId = NULL;

# LightSensor
createLightSensorMonitoring = INSERT INTO laboIAM.lightSensorMonitoring (outsideLight, insideLight, roomId) VALUES (?, ?, ?);
readLightSensorMonitoringList = SELECT outsideLight, insideLight, roomId, create_time FROM laboIAM.lightSensorMonitoring ORDER BY create_time ASC;

# TemperatureSensor
createTemperatureSensorMonitoring = INSERT INTO laboIAM.temperatureSensorMonitoring (temperature, heatingState, roomId) VALUES (?, ?, ?);
readTemperatureSensorMonitoringList = SELECT temperature, heatingState, roomId, create_time FROM laboIAM.temperatureSensorMonitoring ORDER By create_time ASC;

